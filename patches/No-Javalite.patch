diff -rupN a/android_webview/BUILD.gn b/android_webview/BUILD.gn
--- a/android_webview/BUILD.gn	2019-04-17 11:57:45.999838000 -0400
+++ b/android_webview/BUILD.gn	2019-04-17 12:03:00.663158276 -0400
@@ -967,7 +967,7 @@ android_library("android_webview_variati
     "//android_webview/proto:aw_variations_seed_proto_java",
     "//base:base_java",
     "//components/variations/android:variations_java",
-    "//third_party/android_deps:com_google_protobuf_protobuf_lite_java",
+    "//third_party/protobuf:protobuf_lite_javalib"
   ]
 }
 
diff -rupN a/build/config/android/rules.gni b/build/config/android/rules.gni
--- a/build/config/android/rules.gni	2019-04-17 11:58:14.916504000 -0400
+++ b/build/config/android/rules.gni	2019-04-17 12:04:07.236488661 -0400
@@ -3602,9 +3602,7 @@ if (enable_java_templates) {
       _protoc_dep = "//third_party/protobuf:protoc($host_toolchain)"
       _protoc_out_dir = get_label_info(_protoc_dep, "root_out_dir")
       _protoc_bin = "$_protoc_out_dir/protoc"
-      _proto_runtime =
-          "//third_party/android_deps:com_google_protobuf_protobuf_lite_java"
-      _protoc_javalite_plugin_dir = "//third_party/protoc_javalite/"
+      _proto_runtime = "//third_party/protobuf:protobuf_lite_javalib"
     }
     _proto_path = invoker.proto_path
     _template_name = target_name
@@ -3637,11 +3635,6 @@ if (enable_java_templates) {
              ] + rebase_path(sources, root_build_dir)
       if (_generate_nano) {
         args += [ "--nano" ]
-      } else {
-        args += [
-          "--protoc-javalite-plugin-dir",
-          rebase_path(_protoc_javalite_plugin_dir, root_build_dir),
-        ]
       }
     }
 
diff -rupN a/build/protoc_java.py b/build/protoc_java.py
--- a/build/protoc_java.py	2019-04-17 11:58:36.796503000 -0400
+++ b/build/protoc_java.py	2019-04-17 12:05:53.786483928 -0400
@@ -35,8 +35,6 @@ def main(argv):
   parser.add_option("--stamp", help="File to touch on success.")
   parser.add_option("--nano",
       help="Use to generate nano protos.", action='store_true')
-  parser.add_option("--protoc-javalite-plugin-dir",
-      help="Path to protoc java lite plugin directory.")
   options, args = parser.parse_args(argv)
 
   build_utils.CheckOptions(options, parser, ['protoc', 'proto_path'])
@@ -44,10 +42,6 @@ def main(argv):
     print 'One of --java-out-dir or --srcjar must be specified.'
     return 1
 
-  if not options.nano and not options.protoc_javalite_plugin_dir:
-    print 'One of --nano or --protoc-javalite-plugin-dir must be specified.'
-    return 1
-
   with build_utils.TempDir() as temp_dir:
     if options.nano:
       # Specify arguments to the generator.
@@ -55,19 +49,18 @@ def main(argv):
                         'store_unknown_fields=true']
       out_arg = '--javanano_out=' + ','.join(generator_args) + ':' + temp_dir
     else:
-      out_arg = '--javalite_out=' + temp_dir
+      out_arg = '--java_out=' + temp_dir
 
-    custom_env = os.environ.copy()
-    if options.protoc_javalite_plugin_dir:
-      # if we are generating lite protos, then the lite plugin needs to be in the path when protoc
-      # is called. See https://github.com/protocolbuffers/protobuf/blob/master/java/lite.md
-      custom_env['PATH'] = '{}:{}'.format(
-          os.path.abspath(options.protoc_javalite_plugin_dir), custom_env['PATH'])
+      for proto_file in args:
+        if not 'LITE_RUNTIME' in open(proto_file).read():
+          raise Exception(
+              'Chrome only supports lite protos. Please add "optimize_for = '
+              'LITE_RUNTIME" to your proto file to enable the lite runtime.')
 
     # Generate Java files using protoc.
     build_utils.CheckOutput(
         [options.protoc, '--proto_path', options.proto_path, out_arg]
-        + args, env=custom_env)
+        + args)
 
     if options.java_out_dir:
       build_utils.DeleteDirectory(options.java_out_dir)
diff -rupN a/chrome/android/BUILD.gn b/chrome/android/BUILD.gn
--- a/chrome/android/BUILD.gn	2019-04-17 11:59:05.253168000 -0400
+++ b/chrome/android/BUILD.gn	2019-04-17 12:07:24.973146549 -0400
@@ -340,7 +340,7 @@ android_library("chrome_java") {
     "//third_party/android_deps:android_support_v7_mediarouter_java",
     "//third_party/android_deps:android_support_v7_recyclerview_java",
     "//third_party/android_deps:com_google_dagger_dagger_java",
-    "//third_party/android_deps:com_google_protobuf_protobuf_lite_java",
+    "//third_party/protobuf:protobuf_lite_javalib",
     "//third_party/android_deps:javax_inject_javax_inject_java",
     "//third_party/android_media:android_media_java",
     "//third_party/android_swipe_refresh:android_swipe_refresh_java",
@@ -760,7 +760,7 @@ android_library("chrome_test_java") {
     "//third_party/android_deps:android_support_v7_appcompat_java",
     "//third_party/android_deps:android_support_v7_recyclerview_java",
     "//third_party/android_deps:com_google_ar_core_java",
-    "//third_party/android_deps:com_google_protobuf_protobuf_lite_java",
+    "//third_party/protobuf:protobuf_lite_javalib",
     "//third_party/android_support_test_runner:rules_java",
     "//third_party/android_support_test_runner:runner_java",
     "//third_party/android_tools:android_test_base_java",
@@ -1490,7 +1490,7 @@ android_library("browser_java_test_suppo
     "//components/offline_items_collection/core:core_java",
     "//components/sync:test_support_proto_java",
     "//content/public/test/android:content_java_test_support",
-    "//third_party/android_deps:com_google_protobuf_protobuf_lite_java",
+    "//third_party/protobuf:protobuf_lite_javalib",
     "//third_party/junit",
   ]
 }
diff -rupN a/components/invalidation/impl/BUILD.gn b/components/invalidation/impl/BUILD.gn
--- a/components/invalidation/impl/BUILD.gn	2019-04-17 11:59:39.719833000 -0400
+++ b/components/invalidation/impl/BUILD.gn	2019-04-17 12:08:02.209811565 -0400
@@ -273,7 +273,7 @@ if (is_android) {
       "//base:base_java",
       "//components/signin/core/browser/android:java",
       "//components/sync/android:sync_java",
-      "//third_party/android_deps:com_google_protobuf_protobuf_lite_java",
+      "//third_party/protobuf:protobuf_lite_javalib",
       "//third_party/cacheinvalidation:cacheinvalidation_javalib",
       "//third_party/cacheinvalidation:cacheinvalidation_proto_java",
       "//third_party/jsr-305:jsr_305_javalib",
diff -rupN a/third_party/feed/BUILD.gn b/third_party/feed/BUILD.gn
--- a/third_party/feed/BUILD.gn	2019-04-17 12:00:37.079831000 -0400
+++ b/third_party/feed/BUILD.gn	2019-04-17 12:10:13.986472384 -0400
@@ -63,7 +63,7 @@ android_library("feed_lib_java") {
     "//third_party/android_deps:android_support_cardview_java",
     "//third_party/android_deps:android_support_v7_appcompat_java",
     "//third_party/android_deps:android_support_v7_recyclerview_java",
-    "//third_party/android_deps:com_google_protobuf_protobuf_lite_java",
+    "//third_party/protobuf:protobuf_lite_javalib",
     "//third_party/android_deps:javax_inject_javax_inject_java",
     "//third_party/jsr-305:jsr_305_javalib",
   ]
@@ -77,7 +77,7 @@ android_library("feed_conformance_test_l
   deps = [
     ":feed_lib_java",
     ":feed_lib_proto_java",
-    "//third_party/android_deps:com_google_protobuf_protobuf_lite_java",
+    "//third_party/protobuf:protobuf_lite_javalib",
     "//third_party/google-truth:google_truth_java",
     "//third_party/guava:guava_android_java",
     "//third_party/junit:junit",
diff -rupN a/third_party/protobuf/BUILD.gn b/third_party/protobuf/BUILD.gn
--- a/third_party/protobuf/BUILD.gn	2019-04-17 12:00:56.316497000 -0400
+++ b/third_party/protobuf/BUILD.gn	2019-04-17 12:11:47.106468266 -0400
@@ -697,3 +697,61 @@ group("py_proto") {
   data += get_target_outputs(":copy_google_protobuf")
   data += get_target_outputs(":copy_google_protobuf_internal")
 }
+
+if (is_android) {
+  import("//build/config/android/rules.gni")
+
+  android_library("protobuf_lite_javalib") {
+    chromium_code = false
+    java_files = [
+      "java/core/src/main/java/com/google/protobuf/AbstractMessageLite.java",
+      "java/core/src/main/java/com/google/protobuf/AbstractParser.java",
+      "java/core/src/main/java/com/google/protobuf/AbstractProtobufList.java",
+      "java/core/src/main/java/com/google/protobuf/Android.java",
+      "java/core/src/main/java/com/google/protobuf/BooleanArrayList.java",
+      "java/core/src/main/java/com/google/protobuf/ByteBufferWriter.java",
+      "java/core/src/main/java/com/google/protobuf/ByteOutput.java",
+      "java/core/src/main/java/com/google/protobuf/ByteString.java",
+      "java/core/src/main/java/com/google/protobuf/CodedInputStream.java",
+      "java/core/src/main/java/com/google/protobuf/CodedOutputStream.java",
+      "java/core/src/main/java/com/google/protobuf/DoubleArrayList.java",
+      "java/core/src/main/java/com/google/protobuf/ExperimentalApi.java",
+      "java/core/src/main/java/com/google/protobuf/ExtensionLite.java",
+      "java/core/src/main/java/com/google/protobuf/ExtensionRegistryFactory.java",
+      "java/core/src/main/java/com/google/protobuf/ExtensionRegistryLite.java",
+      "java/core/src/main/java/com/google/protobuf/FieldSet.java",
+      "java/core/src/main/java/com/google/protobuf/FloatArrayList.java",
+      "java/core/src/main/java/com/google/protobuf/GeneratedMessageLite.java",
+      "java/core/src/main/java/com/google/protobuf/IntArrayList.java",
+      "java/core/src/main/java/com/google/protobuf/Internal.java",
+      "java/core/src/main/java/com/google/protobuf/InvalidProtocolBufferException.java",
+      "java/core/src/main/java/com/google/protobuf/IterableByteBufferInputStream.java",
+      "java/core/src/main/java/com/google/protobuf/LazyField.java",
+      "java/core/src/main/java/com/google/protobuf/LazyFieldLite.java",
+      "java/core/src/main/java/com/google/protobuf/LazyStringArrayList.java",
+      "java/core/src/main/java/com/google/protobuf/LazyStringList.java",
+      "java/core/src/main/java/com/google/protobuf/LongArrayList.java",
+      "java/core/src/main/java/com/google/protobuf/MapEntryLite.java",
+      "java/core/src/main/java/com/google/protobuf/MapFieldLite.java",
+      "java/core/src/main/java/com/google/protobuf/MessageLite.java",
+      "java/core/src/main/java/com/google/protobuf/MessageLiteOrBuilder.java",
+      "java/core/src/main/java/com/google/protobuf/MessageLiteToString.java",
+      "java/core/src/main/java/com/google/protobuf/MutabilityOracle.java",
+      "java/core/src/main/java/com/google/protobuf/NioByteString.java",
+      "java/core/src/main/java/com/google/protobuf/Parser.java",
+      "java/core/src/main/java/com/google/protobuf/PrimitiveNonBoxingCollection.java",
+      "java/core/src/main/java/com/google/protobuf/ProtobufArrayList.java",
+      "java/core/src/main/java/com/google/protobuf/ProtocolStringList.java",
+      "java/core/src/main/java/com/google/protobuf/RopeByteString.java",
+      "java/core/src/main/java/com/google/protobuf/SmallSortedMap.java",
+      "java/core/src/main/java/com/google/protobuf/TextFormatEscaper.java",
+      "java/core/src/main/java/com/google/protobuf/UninitializedMessageException.java",
+      "java/core/src/main/java/com/google/protobuf/UnknownFieldSetLite.java",
+      "java/core/src/main/java/com/google/protobuf/UnmodifiableLazyStringList.java",
+      "java/core/src/main/java/com/google/protobuf/UnsafeByteOperations.java",
+      "java/core/src/main/java/com/google/protobuf/UnsafeUtil.java",
+      "java/core/src/main/java/com/google/protobuf/Utf8.java",
+      "java/core/src/main/java/com/google/protobuf/WireFormat.java",
+    ]
+  }
+}
